[package]
name = "ractor_wormhole"
version = "0.1.0"
edition = "2024"

[dependencies]
ractor_wormhole_derive = { path = "../ractor_wormhole_derive" }

ractor = { version = "0.15.6", features = [] }
ractor_cluster_derive = { version = "0.15.6", optional = true }

# note: the introduction is json serialized
serde = { version = "1.0.219", features = ["serde_derive"] }
serde_json = "1.0.140"
tokio = { version = "1.45.0", features = [
    #"rt-multi-thread",
    #"net",
    #"time",
    #"macros",
    #"sync"
]}
tokio-tungstenite = { version = "0.26.2", optional = true }
tungstenite = { version = "0.26.2", optional = true }

anyhow = { version = "1.0.98", features = ["backtrace"] }
bincode = { version = "2.0.1", features = [] }
futures = "0.3.31"
log = "0.4.27"
tracing = "0.1.41"
rand = "0.9.1"
uuid = { version = "1.16.0", features = ["rng", "v4"] }
static_assertions = "1.1.0"
async-trait = "0.1.88"


[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4.50"
ewebsock = { version = "0.8.0", features = ["tls"], optional = true }


[features]
default = ["derive"]
ractor_cluster = ["ractor_cluster_derive", "ractor/cluster"]
derive = []
serde = []
bincode = []
websocket_client = ["tungstenite", "tokio-tungstenite", "tokio-tungstenite/native-tls", "ewebsock" ]
websocket_server = ["tungstenite", "tokio-tungstenite"]
async-trait = ["ractor/async-trait"]
